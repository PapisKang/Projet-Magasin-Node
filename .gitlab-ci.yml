stages:
  - build
  - docker
  - test

build:
  stage: build
  image: node:latest
  script:
    - npm i #&& npm run build
  artifacts:
    paths:
    - build/
    
    
docker:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
    - docker login -u papengagne1997@gmail.com -p "Papiskang123456789" "registry.gitlab.com"
    - docker-compose build
    - docker push "registry.gitlab.com/architecture-logicielle/magasinnode"
    
services:
  #- mysql:latest
  #- redis:latest
  #- postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

  
test:
  stage: test
  image: node:latest
  script:
    - npm install --save-dev nyc
    - npm install -g mocha
    - npm i && npm test -- --coverage
  coverage: /All files\s*\|\s*([\d\.]+)/  
  
test_linter:
  stage: .post
  image: node:latest
  script:
    - npm install eslint --save-dev
    - npx eslint *.js

#test_db:
 # stage: .post
  #script:
   # - npm install
   # - node ./specs/start.js ./specs/db-postgres.spec.js
